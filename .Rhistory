library(jsonlite)
library(knitr)
library(dplyr)
```{r, echo=FALSE, message=FALSE}
library(jsonlite)
library(knitr)
library(dplyr)
```
name <- 'INFO-498'
token <- '3c651829a5de48baac8c095a9c9ac2f08fb903b5'
prefix <- 'https://api.github.com/users/mkfreeman?access_token='
whole_url <- paste0(prefix, token)
user_data <- fromJSON(whole_url)
repo_url <- user_data$repos_url
user_data <- fromJSON(whole_url)
```{r, echo=FALSE, message=FALSE}
library(jsonlite)
library(knitr)
library(dplyr)
```
library(jsonlite)
install.packages('jsonlite')
library(jsonlite)
library(knitr)
library(dplyr)
name <- 'INFO-498'
token <- '3c651829a5de48baac8c095a9c9ac2f08fb903b5'
prefix <- 'https://api.github.com/users/mkfreeman?access_token='
whole_url <- paste0(prefix, token)
user_data <- fromJSON(whole_url)
repo_url_prefix <- user_data$repos_url
repo_url <- paste0(repo_url_prefix, 'properties?created=desc&per_page=100')
repo_data <- fromJSON(repo_url)
flat <- flatten(repo_data)
num_repos <- nrow(flat)
most_popular <- flat %>% arrange(desc(forks))$names[1]
user_data <- fromJSON(whole_url)
install.packages('curl')
library(curl)
user_data <- fromJSON(whole_url)
repo_url_prefix <- user_data$repos_url
repo_url <- paste0(repo_url_prefix, 'properties?created=desc&per_page=100')
repo_data <- fromJSON(repo_url)
flat <- flatten(repo_data)
num_repos <- nrow(flat)
most_popular <- flat %>% arrange(desc(forks))$names[1]
View(user_data)
user_date
user_data
View(user_data)
repo_url <- paste0(repo_url_prefix, '?properties?created=desc&per_page=100')
repo_data <- fromJSON(repo_url)
View(repo_data)
flat <- flatten(repo_data)
View(flat)
num_repos <- nrow(flat)
most_popular <- flat %>% arrange(desc(forks))$names[1]
flat <- flatten(repo_data)
most_popular <- flat %>% arrange(desc(forks))$names[1]
most_popular <- flat %>% arrange(desc(forks))$names[1]
name <- 'INFO-498'
token <- '3c651829a5de48baac8c095a9c9ac2f08fb903b5'
prefix <- 'https://api.github.com/users/mkfreeman?access_token='
whole_url <- paste0(prefix, token)
user_data <- fromJSON(whole_url)
repo_url_prefix <- user_data$repos_url
repo_url <- paste0(repo_url_prefix, '?properties?created=desc&per_page=100')
repo_data <- fromJSON(repo_url)
flat <- flatten(repo_data)
num_repos <- nrow(flat)
most_popular <- flat %>% arrange(desc(forks))$names[1]
most_popular <- flat %>% arrange(desc(forks_count))$names[1]
most_popular <- arrange(flat, desc(forks))$names[1]
most_popular
most_popular <- arrange(flat, desc(forks))$names[2]
most_popular <- arrange(flat, desc(forks))$names[2]
most_popular
most_popular <- arrange(flat, desc(forks))$name[1]
most_popular
most_popular <- flat %>% arrange(desc(forks))$name[1]
most_popular <- arrange(flat, desc(forks))$name[1]
most_popular
The username is `r name`, and there are `r num_repos` repositories. The most popular reposite is `r most_popular`.
![](`user_data$avater_url`)
date <- format(as.Date(user_data$created_at), format='%B %d, %Y')
date
flat$date_created <- date
my_cols <- select(flat, name, forks, date_created)
colnames(my_cols) <- c('Name', 'Forks count', 'Date create')
View(my_cols)
kable(my_cols)
summary_table <- group_by(flattened, language)%>%
summarise(total_repos = n(), ave_num_of_forks = mean(forks, na.rm = TRUE))
summary_table <- group_by(flat, language)%>%
summarise(total_repos = n(), ave_num_of_forks = mean(forks, na.rm = TRUE))
kable(summary_table)
data <- group_by(flat, language) %>% select(language, forks_count)
summary <- summarise(data, Average_forks = mean(forks_count))
repositories <- count(data, language)
colnames(repositories) <- c("language","Repositories")
summary <- left_join(summary, repositories)
kable(summary)
repositories
summary1 <- group_by(flat, language)
summary1
View(summary1)
summary1 <- group_by(flat, language) %>% select(language, forks)
View(summary1)
summary2 <- summary1 %>% summarise(Ave_forks = mean(forks))
View(summary2)
View(count(summary1, language))
summary2 <- summary1 %>% summarise(Ave_forks = mean(forks), Total_num = n())
kable(summary2)
repos_num <- summary2$Total_num
names(repos_num)
pie <- summary2$Total_num
lbls <- paste(names(pie), "\n", pie, sep = "")
pie(pie, labels = lbls, main = "Distribution of Repositories")
View(iris)
is.data.frame(iris)
shiny::runApp('C:/Users/LANCELOT/info498f/a8-shiny')
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot_ly(iris,
x = input$leng,
y = input$wid,
mode = 'marker',
color = Species) %>% layout(title = 'Different Flower Sepal and Petal')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
return()
shiny::runApp()
x <- C(1, 2)
x <- c(1, 2)
x[1]
x[2]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(iris)
